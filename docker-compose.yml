version: '3.8'

services:
  flask-app:
    build: .
    container_name: flask-app
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - APP_NAME=flask-app
      - APP_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - HEALTH_CHECK_ENABLED=true
      - CORS_ENABLED=false
      - HTTPS_ENABLED=false  # Flask runs on HTTP, Nginx handles HTTPS
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - flask-app
    networks:
      - app-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email --domains ${DOMAIN} --non-interactive
    depends_on:
      - nginx
    networks:
      - app-network

volumes:
  certbot-etc:
  certbot-var:

networks:
  app-network:
    driver: bridge
