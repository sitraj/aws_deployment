name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy app to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Clone or update repo
            if [ ! -d ~/app ]; then
              git clone https://github.com/${{ github.repository }}.git ~/app
            fi
            cd ~/app
            git pull origin main

            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S apt-get update
              echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S apt-get install -y docker.io
              echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S systemctl start docker
              echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S systemctl enable docker
              echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S usermod -aG docker $USER
              # Apply group changes without requiring logout
              newgrp docker
            fi

            # Stop and remove existing container if it exists
            echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S docker stop flask-app || true
            echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S docker rm flask-app || true

            # Build and run new container
            echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S docker build -t flask-app .
            echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S docker run -d --name flask-app -p 8080:8080 flask-app

            # Verify container is running
            sleep 2
            if echo "${{ secrets.EC2_SUDO_PASSWORD }}" | sudo -S docker ps | grep -q flask-app; then
              echo "✅ Docker container is running"
            else
              echo "❌ Docker container failed to start"
              exit 1
            fi
          EOF

