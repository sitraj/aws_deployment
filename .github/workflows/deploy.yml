name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy app to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Clone or update repo
            if [ ! -d ~/app ]; then
              git clone https://github.com/${{ github.repository }}.git ~/app
            fi
            cd ~/app
            git pull origin main

            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              # Update package list
              sudo DEBIAN_FRONTEND=noninteractive apt-get update
              
              # Install Docker
              sudo DEBIAN_FRONTEND=noninteractive apt-get install -y docker.io
              
              # Start and enable Docker service
              sudo systemctl start docker
              sudo systemctl enable docker
              
              # Create docker group if it doesn't exist
              sudo groupadd docker || true
              
              # Add user to docker group
              sudo usermod -aG docker $USER
              
              # Start a new shell with the docker group
              exec sg docker -c "
                # Stop and remove existing container if it exists
                docker stop flask-app || true
                docker rm flask-app || true

                # Build and run new container
                docker build -t flask-app .
                docker run -d --name flask-app -p 8080:8080 flask-app

                # Verify container is running
                sleep 2
                if docker ps | grep -q flask-app; then
                  echo '✅ Docker container is running'
                else
                  echo '❌ Docker container failed to start'
                  exit 1
                fi
              "
            else
              # If Docker is already installed, just run the container
              docker stop flask-app || true
              docker rm flask-app || true
              docker build -t flask-app .
              docker run -d --name flask-app -p 8080:8080 flask-app
              
              # Verify container is running
              sleep 2
              if docker ps | grep -q flask-app; then
                echo "✅ Docker container is running"
              else
                echo "❌ Docker container failed to start"
                exit 1
              fi
            fi
          EOF

